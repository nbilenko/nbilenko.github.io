import { useEffect, useState } from "react";
import Link from "next/link";
import { useTheme } from "next-themes";
import { useRouter } from "next/router";
import userData from "@constants/data";

function NavLink({ name, href, selected }) {
  return (<Link
    href={href}
    className={`text-base ${selected
      ? "text-gray-800 dark:text-gray-200 font-bold "
      : "text-gray-600 dark:text-gray-300"
      }`}
  >
    {`${name} `}
  </Link>)
}

function NavLinks({ path }) {
  return (
    <>
      <NavLink name="Publications & Talks" href="/pubstalks" selected={path.startsWith("/pubstalks")} />
      <NavLink name="Projects" href="/projects" selected={path.startsWith("/projects")} />
    </>
  )
}

function DarkModeIcon({ theme }) {
  return (
    theme === "dark" ?
      (
        <svg
          width="24"
          height="24"
          viewBox="0 0 64 64"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g>
            <g fill="#f9ebb2">
              <path d="m12 32.001c0-1.105-.895-2-2-2h-8c-1.105 0-2 .895-2 2s.895 2 2 2h8c1.105 0 2-.895 2-2z" /><path d="m10.591 43.032 1.848-.766c1.021-.422 1.506-1.59 1.084-2.609-.424-1.023-1.594-1.508-2.613-1.082l-1.848.762c-1.021.422-1.507 1.59-1.083 2.613.423 1.02 1.591 1.504 2.612 1.082z" /><path d="m24.349 50.477c-1.021-.422-2.193.062-2.613 1.082l-.766 1.848c-.424 1.023.059 2.191 1.08 2.613s2.191-.059 2.615-1.082l.764-1.844c.422-1.024-.061-2.196-1.08-2.617z" /><path d="m42.269 51.562c-.422-1.023-1.594-1.508-2.613-1.086s-1.508 1.594-1.082 2.613l.766 1.848c.424 1.02 1.59 1.508 2.609 1.082 1.023-.422 1.508-1.59 1.086-2.613z" /><path d="m54.939 39.333-1.844-.762c-1.023-.426-2.195.062-2.617 1.082-.424 1.02.062 2.191 1.082 2.613l1.848.766c1.023.422 2.191-.059 2.609-1.082.428-1.023-.054-2.191-1.078-2.617z" /><path d="m53.406 20.962-1.842.766c-1.025.422-1.508 1.598-1.086 2.617.418 1.02 1.594 1.504 2.613 1.082l1.848-.766c1.021-.422 1.508-1.59 1.078-2.609-.417-1.024-1.585-1.512-2.611-1.09z" /><path d="m39.655 13.521c1.016.426 2.189-.066 2.611-1.086l.766-1.848c.424-1.02-.057-2.188-1.084-2.605-1.018-.43-2.189.051-2.613 1.078l-.764 1.84c-.424 1.027.065 2.199 1.084 2.621z" /><path d="m21.729 12.435c.426 1.023 1.598 1.508 2.617 1.086 1.02-.418 1.504-1.594 1.078-2.613l-.764-1.852c-.42-1.019-1.588-1.503-2.611-1.074-1.02.417-1.508 1.585-1.082 2.609z" /><path d="m9.062 24.661 1.844.766c1.023.422 2.195-.062 2.617-1.082.426-1.016-.062-2.191-1.086-2.609l-1.848-.77c-1.02-.426-2.188.059-2.609 1.086-.421 1.015.059 2.187 1.082 2.609z" /><path d="m15.031 46.142-5.658 5.655c-.781.785-.781 2.047 0 2.828.783.785 2.049.785 2.83.004l5.656-5.656c.781-.781.781-2.046 0-2.831-.782-.782-2.047-.782-2.828 0z" /><path d="m32.001 52c-1.105 0-2 .891-2 2l-.002 8c0 1.105.895 2 2 2 1.109 0 2.004-.895 2.004-2v-8c0-1.105-.895-2-2.002-2z" /><path d="m48.973 46.138c-.781-.781-2.046-.781-2.829.004-.781.781-.783 2.042 0 2.827l5.655 5.66c.781.781 2.047.781 2.828 0 .785-.785.785-2.051.004-2.832z" /><path d="m62.002 29.997h-8.002c-1.105 0-2 .891-2 2.004.002 1.102.893 1.996 2 2h8.002c1.105 0 2-.895 2-2 0-1.109-.895-2.004-2-2.004z" /><path d="m48.971 17.856 5.66-5.656c.781-.781.781-2.047-.002-2.832-.783-.781-2.049-.781-2.83 0l-5.659 5.656c-.781.781-.781 2.046.004 2.832.781.778 2.042.782 2.827 0z" /><path d="m32.001 12.001c1.102-.004 1.996-.898 2-2l.002-8.003c0-1.105-.895-2-2.004-2-1.105 0-2 .895-2 2l-.004 8c0 1.105.895 2 2.006 2.003z" /><path d="m15.025 17.856c.781.781 2.044.785 2.833 0 .777-.781.777-2.042 0-2.828l-5.656-5.66c-.781-.781-2.047-.781-2.832.004-.781.781-.781 2.047 0 2.828z" /><path d="m31.999 14.001c-9.941 0-18 8.058-18 18s8.059 17.999 18 17.999 17.999-8.058 17.999-17.999-8.058-18-17.999-18zm0 32c-7.732 0-14-6.27-14-14 0-7.734 6.268-14 14-14s14 6.266 14 14c0 7.73-6.268 14-14 14z" />
            </g>
            <circle cx="31.999" cy="31.997" fill="#f9ebb2" r="14" />
          </g>
        </svg>

      ) : (
        <svg
          width="24"
          height="24"
          viewBox="0 0 576 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path d="m342.8 352.7c5.7-9.6 9.2-20.7 9.2-32.7 0-35.3-28.7-64-64-64-17.2 0-32.8 6.9-44.3 17.9-16.3-29.6-47.5-49.9-83.7-49.9-53 0-96 43-96 96 0 2 .5 3.8.6 5.7-37.5 13.1-64.6 48.4-64.6 90.3 0 53 43 96 96 96h240c44.2 0 80-35.8 80-80 0-41.9-32.3-75.8-73.2-79.3zm222.5-54.3c-93.1 17.7-178.5-53.7-178.5-147.7 0-54.2 29-104 76.1-130.8 7.3-4.1 5.4-15.1-2.8-16.7-11.7-2.1-23.4-3.2-35.1-3.2-105.9 0-191.9 85.9-191.9 192 0 8.5.7 16.8 1.8 25 5.9 4.3 11.6 8.9 16.7 14.2 11.4-4.7 23.7-7.2 36.4-7.2 52.9 0 96 43.1 96 96 0 3.6-.2 7.2-.6 10.7 23.6 10.8 42.4 29.5 53.5 52.6 54.4-3.4 103.7-29.3 137.1-70.4 5.3-6.5-.5-16.1-8.7-14.5z" />
        </svg>
      ))
}

export default function Navbar() {
  const router = useRouter();
  const path = router.asPath;
  const { theme, setTheme } = useTheme();
  const [mounted, setMounted] = useState(false);

  useEffect(() => {
    setMounted(true);
  }, []);

  return (
    <div className="md:sticky md:top-0 md:z-5 md:z-50 w-full px-4 py-5 md:px-10 bg-[#eaf4ff] dark:bg-[#311F3E] shadow-md">
      <div className="flex md:flex-row justify-between items-center max-w-6xl ">
        <Link href="/">
          <h1 className="font-semibold text-xl dark:text-gray-100">
            {userData.name}
          </h1>
        </Link>

        <div className="space-x-8 hidden md:block">
          <NavLinks path={path} />
        </div>
        <div className="mx-10">
          <button
            aria-label="Toggle Dark Mode"
            type="button"
            className="w-10 h-10 p-3 rounded focus:outline-none"
            onClick={() => setTheme(theme === "dark" ? "light" : "dark")}
          >
            {mounted && (<DarkModeIcon theme={theme} />)}
          </button>
        </div>
      </div>
      <div className="space-x-8 block md:hidden mt-4">
        <NavLinks path={path} />
      </div>
    </div>
  );
}
